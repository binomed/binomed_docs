:root {
  --color: red;
  --scheme: http;
  --hostname: localhost;
  --port: 3000;
  --path: assets/images;
  /*
    --img1: hack1.jpg;
    --img2: hack2.jpg;

    --randomColor: () => {
        let red = Math.random()*255;
        let green = Math.random()*255;
        let blue = Math.random()*255;
        return "rgb("+red+","+green+","+blue+")";
    };

    --dependancy: () => {
        let color = `var(--color)`;
        return color;
    };

    --url: (img) => {
        let scheme = `var(--scheme)`;
        let host = `var(--hostname)`;
        let port = var(--port);
        let path = `var(--path)`;
        let urlConcat = scheme+'://'+host+':'+port+'/'+path+'/'+img;
        return "url("+urlConcat.split(' ').join('')+")";
    };

    */
  --computeUrl:initial; }

body > div {
  width: 100%;
  display: flex;
  flex-direction: column; }

#demo-var {
  align-items: initial;
  max-height: 100%; }

#codemirror-css {
  flex: 1;
  text-align: left;
  font-size: var(--codemiror-size, 30px); }

#pure-css .bg {
  width: 100%;
  height: 300px;
  background-size: cover;
  background-image: var(--computeUrl);
  border: 3px dotted black;
  position: relative;
  margin: 6px 0px; }

#pure-css .bg:before {
  position: absolute;
  line-height: 300px;
  top: 0;
  left: 0;
  width: 100%;
  text-align: center; }

#pure-css {
  background: var(--computeRandomColor); }

#pure-css h1 {
  --color: blue;
  color: var(--computeDependancy); }

#pure-css #bg1:before {
  content: '#pure-css #bg1'; }

#pure-css #bg2:before {
  content: '#pure-css #bg2'; }

#pure-css #bg1 {
  --imgToUse: var(--img1); }

#pure-css #bg2 {
  --imgToUse: var(--img2); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlei9kZW1vLmNzcyIsInNvdXJjZXMiOlsicHJlei9kZW1vLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiOnJvb3R7XG4gICAgLS1jb2xvcjogcmVkO1xuICAgIC0tc2NoZW1lOiBodHRwO1xuICAgIC0taG9zdG5hbWU6IGxvY2FsaG9zdDtcbiAgICAtLXBvcnQ6IDMwMDA7XG4gICAgLS1wYXRoOiBhc3NldHMvaW1hZ2VzO1xuICAgIC8qXG4gICAgLS1pbWcxOiBoYWNrMS5qcGc7XG4gICAgLS1pbWcyOiBoYWNrMi5qcGc7XG5cbiAgICAtLXJhbmRvbUNvbG9yOiAoKSA9PiB7XG4gICAgICAgIGxldCByZWQgPSBNYXRoLnJhbmRvbSgpKjI1NTtcbiAgICAgICAgbGV0IGdyZWVuID0gTWF0aC5yYW5kb20oKSoyNTU7XG4gICAgICAgIGxldCBibHVlID0gTWF0aC5yYW5kb20oKSoyNTU7XG4gICAgICAgIHJldHVybiBcInJnYihcIityZWQrXCIsXCIrZ3JlZW4rXCIsXCIrYmx1ZStcIilcIjtcbiAgICB9O1xuXG4gICAgLS1kZXBlbmRhbmN5OiAoKSA9PiB7XG4gICAgICAgIGxldCBjb2xvciA9IGB2YXIoLS1jb2xvcilgO1xuICAgICAgICByZXR1cm4gY29sb3I7XG4gICAgfTtcblxuICAgIC0tdXJsOiAoaW1nKSA9PiB7XG4gICAgICAgIGxldCBzY2hlbWUgPSBgdmFyKC0tc2NoZW1lKWA7XG4gICAgICAgIGxldCBob3N0ID0gYHZhcigtLWhvc3RuYW1lKWA7XG4gICAgICAgIGxldCBwb3J0ID0gdmFyKC0tcG9ydCk7XG4gICAgICAgIGxldCBwYXRoID0gYHZhcigtLXBhdGgpYDtcbiAgICAgICAgbGV0IHVybENvbmNhdCA9IHNjaGVtZSsnOi8vJytob3N0Kyc6Jytwb3J0KycvJytwYXRoKycvJytpbWc7XG4gICAgICAgIHJldHVybiBcInVybChcIit1cmxDb25jYXQuc3BsaXQoJyAnKS5qb2luKCcnKStcIilcIjtcbiAgICB9O1xuXG4gICAgKi9cblxuICAgIC0tY29tcHV0ZVVybDppbml0aWFsO1xuXG59XG5cbmJvZHk+ZGl2e1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xufVxuXG4jZGVtby12YXJ7XG4gICAgYWxpZ24taXRlbXM6IGluaXRpYWw7XG4gICAgbWF4LWhlaWdodDogMTAwJTtcbn1cblxuXG4jY29kZW1pcnJvci1jc3N7XG4gICAgZmxleDoxO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC1zaXplOiB2YXIoLS1jb2RlbWlyb3Itc2l6ZSwgMzBweCk7XG59XG5cbiNwdXJlLWNzcyAuYmd7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgYmFja2dyb3VuZC1pbWFnZTp2YXIoLS1jb21wdXRlVXJsKTtcbiAgICBib3JkZXI6IDNweCBkb3R0ZWQgYmxhY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogNnB4IDBweDtcbn1cblxuI3B1cmUtY3NzIC5iZzpiZWZvcmV7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxpbmUtaGVpZ2h0OiAzMDBweDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cblxuI3B1cmUtY3Nze1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbXB1dGVSYW5kb21Db2xvcik7XG59XG5cbiNwdXJlLWNzcyBoMSB7XG4gICAgLS1jb2xvcjogYmx1ZTtcbiAgICBjb2xvcjogdmFyKC0tY29tcHV0ZURlcGVuZGFuY3kpO1xufVxuXG5cbiNwdXJlLWNzcyAjYmcxOmJlZm9yZXtcbiAgICBjb250ZW50OiAnI3B1cmUtY3NzICNiZzEnO1xufVxuI3B1cmUtY3NzICNiZzI6YmVmb3Jle1xuICAgIGNvbnRlbnQ6ICcjcHVyZS1jc3MgI2JnMic7XG59XG5cbiNwdXJlLWNzcyAjYmcxIHtcbiAgICAtLWltZ1RvVXNlOiB2YXIoLS1pbWcxKTtcbn1cbiNwdXJlLWNzcyAjYmcyIHtcbiAgICAtLWltZ1RvVXNlOiB2YXIoLS1pbWcyKTtcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQUFBQSxLQUFLLENBQUE7RUFDRCxPQUFPLENBQUEsSUFBQztFQUNSLFFBQVEsQ0FBQSxLQUFDO0VBQ1QsVUFBVSxDQUFBLFVBQUM7RUFDWCxNQUFNLENBQUEsS0FBQztFQUNQLE1BQU0sQ0FBQSxjQUFDO0VBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUF5QkU7RUFFRixZQUFZLENBQUEsT0FBQyxHQUVoQjs7QUFFRCxBQUFBLElBQUksR0FBQyxHQUFHLENBQUE7RUFDSixLQUFLLEVBQUUsSUFBSTtFQUNYLE9BQU8sRUFBRSxJQUFJO0VBQ2IsY0FBYyxFQUFDLE1BQU0sR0FDeEI7O0FBRUQsQUFBQSxTQUFTLENBQUE7RUFDTCxXQUFXLEVBQUUsT0FBTztFQUNwQixVQUFVLEVBQUUsSUFBSSxHQUNuQjs7QUFHRCxBQUFBLGVBQWUsQ0FBQTtFQUNYLElBQUksRUFBQyxDQUFDO0VBQ04sVUFBVSxFQUFFLElBQUk7RUFDaEIsU0FBUyxFQUFFLDJCQUEyQixHQUN6Qzs7QUFFRCxBQUFBLFNBQVMsQ0FBQyxHQUFHLENBQUE7RUFDVCxLQUFLLEVBQUUsSUFBSTtFQUNYLE1BQU0sRUFBRSxLQUFLO0VBQ2IsZUFBZSxFQUFDLEtBQUs7RUFDckIsZ0JBQWdCLEVBQUMsaUJBQWlCO0VBQ2xDLE1BQU0sRUFBRSxnQkFBZ0I7RUFDeEIsUUFBUSxFQUFFLFFBQVE7RUFDbEIsTUFBTSxFQUFFLE9BQU8sR0FDbEI7O0FBRUQsQUFBQSxTQUFTLENBQUMsR0FBRyxBQUFBLE9BQU8sQ0FBQTtFQUNoQixRQUFRLEVBQUUsUUFBUTtFQUNsQixXQUFXLEVBQUUsS0FBSztFQUNsQixHQUFHLEVBQUUsQ0FBQztFQUNOLElBQUksRUFBRSxDQUFDO0VBQ1AsS0FBSyxFQUFFLElBQUk7RUFDWCxVQUFVLEVBQUUsTUFBTSxHQUNyQjs7QUFHRCxBQUFBLFNBQVMsQ0FBQTtFQUNMLFVBQVUsRUFBRSx5QkFBeUIsR0FDeEM7O0FBRUQsQUFBQSxTQUFTLENBQUMsRUFBRSxDQUFDO0VBQ1QsT0FBTyxDQUFBLEtBQUM7RUFDUixLQUFLLEVBQUUsd0JBQXdCLEdBQ2xDOztBQUdELEFBQUEsU0FBUyxDQUFDLElBQUksQUFBQSxPQUFPLENBQUE7RUFDakIsT0FBTyxFQUFFLGdCQUFnQixHQUM1Qjs7QUFDRCxBQUFBLFNBQVMsQ0FBQyxJQUFJLEFBQUEsT0FBTyxDQUFBO0VBQ2pCLE9BQU8sRUFBRSxnQkFBZ0IsR0FDNUI7O0FBRUQsQUFBQSxTQUFTLENBQUMsSUFBSSxDQUFDO0VBQ1gsVUFBVSxDQUFBLFlBQUMsR0FDZDs7QUFDRCxBQUFBLFNBQVMsQ0FBQyxJQUFJLENBQUM7RUFDWCxVQUFVLENBQUEsWUFBQyxHQUNkIn0= */
